//BAB 7 GRAPH II

#include <cstring>
#include <iostream>
#define MAX 100
#define N 6
using namespace std;

int dijkstra(int cost[][N], int source, int target);
int dijkstra(int cost[][N], int source, int target) {
int dist[N], prev[N], selected[N] = {0}, i, m, min, start, d, j;
  char path[N];
  for (i = 1; i < N; i++) {
    dist[i] = MAX;
    prev[i] = -1;
  }
  start = source;
  selected[start] = 1;
  dist[start] = 0;

  while (selected[target] == 0) {
    min = MAX;
    m = 0;

    for (i = 1; i < N; i++) {
      d = dist[start] + cost[start][i];
      if (d < dist[i] && selected[i] == 0) {
        dist[i] = d;
        prev[i] = start;
      }
      if (min > dist[i] && selected[i] == 0) {
        min = dist[i];
        m = i;
      }
      
    }
    start = m;
    selected[start] = 1;
  }
  start = target;
  j = 0;

  while (start != -1) {
    path[j++] = start + 65;
    start = prev[start];
  }
  path[j] = '\0';
  cout << path;
  return dist[target];
}
//Siti Sarah 222310019
int main() {
  int cost[N][N], i, j, w, co;
  int source, target, x, y;

  cout << "Lintasan Algoritma Terpendek (DIJKSTRA)\n";

  for (i = 1; i < N; i++) {
    for (j = 1; j < N; j++) {
      cost[i][j] = MAX;
    }
  }

  for (x = 1; x < N; x++) {
    for (y = x + 1; y < N; y++) {
      cout << "Masukkan nilai dari jalur antara simpul " << x << " dan " << y << ": ";
      cin >> w;
      cost[x][y] = cost[y][x] = w;
    }
    cout << endl;
  }

  cout << "\nMasukkan asal simpul: ";
  cin >> source;
  cout << "\nMasukkan target simpul: ";
  cin >> target;
  co = dijkstra(cost, source, target);
  cout << "\nJalur Terpendek: " << co << endl;

  return 0;
}
